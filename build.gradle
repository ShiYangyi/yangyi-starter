plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.4'
    implementation 'org.springframework.security:spring-security-test:5.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.4'

    implementation 'org.flywaydb:flyway-core:5.2.4'
    implementation 'mysql:mysql-connector-java:8.0.25'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.auth0:java-jwt:3.18.1'
    implementation 'net.minidev:json-smart:2.4.7'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.4'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'com.h2database:h2:1.4.200'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    dependsOn("jacocoTestReport")
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}

